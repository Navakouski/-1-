
#Использовать asserts

#Область ОписаниеПеременных

Перем ЧитатьЖурнал; // Если истина то читаем журнал
Перем ПутьКВнешнейКомпонентеSqlLite; // Можно взять из папки дополнительно
Перем ПутьКSqlLite; // Путь к файлу журнала в формате lgd
Перем СтрокаСоединенияСSQL; // Строка соединения с SQL, если базы нет то ее создаст
Перем ОбрабатываемаяСтрокаСобытий; // Сохраняется номер текущей читаемой стоки. Если по какой то причине у нас затерлись данные или пропустили часть строк то можно начать загрузку с конкретного айди что бы догрузить. Для таблицы ЗаписиДанных.
Перем ЧислоСтрокДляЗаписи; // Порция строк для записи в базу. 1000 максимум
Перем ИмяИнформационнойБазы; // Имя информационной базы, должно быть уникально. Поиск базы осуществляется по нему
Перем ПредставлениеИнформационнойБазы; // Представление информационной базы
Перем ОписаниеИнформационнойБазы; // Описание информационной базы
Перем НачатьСПервойВSQLLite; // Если мы загружаем базу первый раз, то Истина. Например есть журнал который сокращался и сейчас хранятся записи с id от 500 до 10000. Мы получим минимальный айди и начнем загрузку с него. Для таблицы ЗаписиДанных.
Перем ПаузаСекунд; // Пауза между обращением к базам. Мы получаем таблицы последних айди для каждой таблицы в SQL и журнале регистрации. После чего проходим все таблицы по очереди загружая новые записи. После этого пауза на указанное время перед новой итерацией.
Перем ВыводитьЛог; // Если истина выводится информация по количеству итераций, загрузке таблиц.

Перем СоединениеSqlLite;
Перем СоединениеSql;
Перем ИнформационнаяСистема;
Перем НастройкиПочты; 

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта(НастройкиОбработки)
	
	ОписаниеСтроки = Новый ОписаниеТипов("Строка");
	ОписаниеЧисла = Новый ОписаниеТипов("Число");
	ОписаниеБулево = Новый ОписаниеТипов("Булево");

	НастройкиЧтенияЖурнала = НастройкиОбработки.НастройкиЧтенияЖурнала;

	ПутьКВнешнейКомпонентеSqlLite = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.ПутьКВнешнейКомпонентеSqlLite);
	ПутьКSqlLite = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.ПутьКSqlLite);
	СтрокаСоединенияСSQL = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.СтрокаСоединенияСSQL);
	ИмяИнформационнойБазы = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.ИмяИнформационнойБазы);
	ПредставлениеИнформационнойБазы = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.ПредставлениеИнформационнойБазы);
	ОписаниеИнформационнойБазы = ОписаниеСтроки.ПривестиЗначение(НастройкиЧтенияЖурнала.ОписаниеИнформационнойБазы);
	ЧислоСтрокДляЗаписи = ОписаниеЧисла.ПривестиЗначение(НастройкиЧтенияЖурнала.ЧислоСтрокДляЗаписи);

	// Максимум
	Если ЧислоСтрокДляЗаписи > 1000 Тогда
		ЧислоСтрокДляЗаписи = 1000;		
	КонецЕсли;

	ЧитатьЖурнал = ОписаниеБулево.ПривестиЗначение(НастройкиЧтенияЖурнала.ЧитатьЖурнал);
	НачатьСПервойВSQLLite = ОписаниеБулево.ПривестиЗначение(НастройкиЧтенияЖурнала.НачатьСПервойВSQLLite);
	ВыводитьЛог = ОписаниеБулево.ПривестиЗначение(НастройкиЧтенияЖурнала.ВыводитьЛог);
	ОбрабатываемаяСтрокаСобытий = ОписаниеЧисла.ПривестиЗначение(НастройкиЧтенияЖурнала.ОбрабатываемаяСтрокаСобытий);
	ПаузаСекунд = ОписаниеЧисла.ПривестиЗначение(НастройкиЧтенияЖурнала.ПаузаСекунд);

	НастройкиОбработкиНастройкиПочты = НастройкиОбработки.НастройкиПочты;

	ИспользоватьSSL = ОписаниеБулево.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ИспользоватьSSL);
	ОтправлятьПисьмоПриОшибке = ОписаниеБулево.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ОтправлятьПисьмоПриОшибке);
	ОтправитьТестовоеПисьмо = ОписаниеБулево.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ОтправитьТестовоеПисьмо);
	АдресSMTP = ОписаниеСтроки.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.АдресSMTP);
	ПользовательSMTP = ОписаниеСтроки.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ПользовательSMTP);
	ПарольSMTP = ОписаниеСтроки.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ПарольSMTP);
	АдресЭлектроннойПочтыПолучателя = ОписаниеСтроки.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.АдресЭлектроннойПочтыПолучателя);
	ПортSMTP = ОписаниеЧисла.ПривестиЗначение(НастройкиОбработкиНастройкиПочты.ПортSMTP);

	НастройкиПочты = Новый Структура;

	НастройкиПочты.Вставить("ОтправлятьПисьмоПриОшибке", ОтправлятьПисьмоПриОшибке);
	НастройкиПочты.Вставить("ИспользоватьSSL", ИспользоватьSSL);
	НастройкиПочты.Вставить("ОтправитьТестовоеПисьмо", ОтправитьТестовоеПисьмо);
	НастройкиПочты.Вставить("АдресSMTP", АдресSMTP);
	НастройкиПочты.Вставить("ПользовательSMTP", ПользовательSMTP);
	НастройкиПочты.Вставить("ПарольSMTP", ПарольSMTP);
	НастройкиПочты.Вставить("АдресЭлектроннойПочтыПолучателя", АдресЭлектроннойПочтыПолучателя);
	НастройкиПочты.Вставить("ПортSMTP", ПортSMTP);
	
	ОбработкаВозможна();

КонецПроцедуры

#КонецОбласти

#Область ОбращениеКПеременным

Функция ПолучитьВыводитьЛог() Экспорт
	Возврат ВыводитьЛог;
КонецФункции

Функция ПолучитьПаузаСекунд() Экспорт
	Возврат ПаузаСекунд;
КонецФункции

Функция ПолучитьНастройкиПочты() Экспорт
	Возврат НастройкиПочты;
КонецФункции

Функция ПолучитьНачатьСПервойВSQLLite() Экспорт
	Возврат НачатьСПервойВSQLLite;
КонецФункции

Функция ПолучитьПредставлениеИнформационнойБазы() Экспорт
	Возврат ПредставлениеИнформационнойБазы;
КонецФункции

Функция ПолучитьОписаниеИнформационнойБазы() Экспорт
	Возврат ОписаниеИнформационнойБазы;
КонецФункции

Функция ПолучитьОбрабатываемаяСтрокаСобытий() Экспорт
	Возврат ОбрабатываемаяСтрокаСобытий;
КонецФункции

Функция ПолучитьСоединениеSql() Экспорт
	Возврат СоединениеSql;
КонецФункции

Функция ПолучитьИнформационнаяСистема() Экспорт
	Возврат ИнформационнаяСистема;
КонецФункции

Функция ПолучитьСоединениеSqlLite() Экспорт
	Возврат СоединениеSqlLite;
КонецФункции

Функция ПолучитьПутьКВнешнейКомпонентеSqlLite() Экспорт
	Возврат ПутьКВнешнейКомпонентеSqlLite;
КонецФункции

Функция ПолучитьПутьКSqlLite() Экспорт
	Возврат ПутьКSqlLite;
КонецФункции

Функция ПолучитьСтрокаСоединенияСSQL() Экспорт
	Возврат СтрокаСоединенияСSQL;
КонецФункции

Функция ПолучитьИмяИнформационнойБазы() Экспорт
	Возврат ИмяИнформационнойБазы;
КонецФункции

Функция ПолучитьЧислоСтрокДляЗаписи() Экспорт
	Возврат ЧислоСтрокДляЗаписи;
КонецФункции

Функция ПолучитьЧитатьЖурнал() Экспорт
	Возврат ЧитатьЖурнал;
КонецФункции

Процедура УстановитьИнформационнаяСистема(ЗначениеПеременной) Экспорт
	ИнформационнаяСистема = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьСтрокаСоединенияСSQL(ЗначениеПеременной) Экспорт
	СтрокаСоединенияСSQL = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьОбрабатываемаяСтрокаСобытий(ЗначениеПеременной) Экспорт
	ОбрабатываемаяСтрокаСобытий = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьСоединениеSqlLite(ЗначениеПеременной) Экспорт
	СоединениеSqlLite = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьСоединениеSql(ЗначениеПеременной) Экспорт
	СоединениеSql = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьНачатьСПервойВSQLLite(ЗначениеПеременной) Экспорт
	НачатьСПервойВSQLLite = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьПаузаСекунд(ЗначениеПеременной) Экспорт
	ПаузаСекунд = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьВыводитьЛог(ЗначениеПеременной) Экспорт
	ВыводитьЛог = ЗначениеПеременной;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаВозможна()
	
	Если ЧитатьЖурнал Тогда
		
		Ожидаем.Что(ПутьКВнешнейКомпонентеSqlLite, "ПутьКВнешнейКомпонентеSqlLite должен быть заполнен").Заполнено();
		Ожидаем.Что(ПутьКSqlLite, "ПутьКSqlLite должен быть заполнен").Заполнено();
		Ожидаем.Что(СтрокаСоединенияСSQL, "СтрокаСоединенияСSQL должен быть заполнен").Заполнено();
		Ожидаем.Что(ИмяИнформационнойБазы, "ИмяИнформационнойБазы должен быть заполнен").Заполнено();
		Ожидаем.Что(ПредставлениеИнформационнойБазы, "ПредставлениеИнформационнойБазы должен быть заполнен").Заполнено();
		Ожидаем.Что(ОписаниеИнформационнойБазы, "ОписаниеИнформационнойБазы должен быть заполнен").Заполнено();	
		Ожидаем.Что(ЧислоСтрокДляЗаписи, "ЧислоСтрокДляЗаписи должен быть заполнен").Заполнено();
		Ожидаем.Что(ПаузаСекунд, "ПаузаСекунд должен быть заполнен").Заполнено();
		
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьИмяИнформационнойБазы(ЗначениеПеременной)
	ИмяИнформационнойБазы = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьПредставлениеИнформационнойБазы(ЗначениеПеременной)
	ПредставлениеИнформационнойБазы = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьОписаниеИнформационнойБазы(ЗначениеПеременной)
	ОписаниеИнформационнойБазы = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьЧислоСтрокДляЗаписи(ЗначениеПеременной)
	ЧислоСтрокДляЗаписи = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьПутьКВнешнейКомпонентеSqlLite(ЗначениеПеременной)
	ПутьКВнешнейКомпонентеSqlLite = ЗначениеПеременной;
КонецПроцедуры

Процедура УстановитьПутьКSqlLite(ЗначениеПеременной)
	ПутьКSqlLite = ЗначениеПеременной;
КонецПроцедуры

#КонецОбласти

